<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.7"/>
<title>Pattern parsing: parseCMD.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="search-icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Pattern parsing
   &#160;<span id="projectnumber">1.0</span>
   </div>
   <div id="projectbrief">Parsing for meaningful data on a serial link using State Machine.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.7 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('parse_c_m_d_8c.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Variables</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">parseCMD.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<p>This file elaborates the implimentation of sequence parsing algorithm using command prompt as sequence input. The file goes through various function there working as well as there structure. Variables are elaborated and there role in program is explained.</p>
<p><a href="parse_c_m_d_8c_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4e4afb3c8c2df19d88370f1c49ced666"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#a4e4afb3c8c2df19d88370f1c49ced666">parseForHello</a> (char c)</td></tr>
<tr class="separator:a4e4afb3c8c2df19d88370f1c49ced666"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6bbbd9117e70c1ce9a39dd2836366c4"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#ad6bbbd9117e70c1ce9a39dd2836366c4">getdata</a> ()</td></tr>
<tr class="separator:ad6bbbd9117e70c1ce9a39dd2836366c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae66f6b31b5ad750f1fe042a706a4e3d4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a> ()</td></tr>
<tr class="separator:ae66f6b31b5ad750f1fe042a706a4e3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ab5dd39b3c6371b911a65f9b97dc61453"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a></td></tr>
<tr class="memdesc:ab5dd39b3c6371b911a65f9b97dc61453"><td class="mdescLeft">&#160;</td><td class="mdescRight">Globally scoped array containing desired string sequence.  <a href="#ab5dd39b3c6371b911a65f9b97dc61453">More...</a><br /></td></tr>
<tr class="separator:ab5dd39b3c6371b911a65f9b97dc61453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89f234133d3efe315836311cbf21c64b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a> = -1</td></tr>
<tr class="memdesc:a89f234133d3efe315836311cbf21c64b"><td class="mdescLeft">&#160;</td><td class="mdescRight">State of system, starts from -1 to (number of elements - 1)  <a href="#a89f234133d3efe315836311cbf21c64b">More...</a><br /></td></tr>
<tr class="separator:a89f234133d3efe315836311cbf21c64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7acdcce221b5a56a8ebb965c10c9d96"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a></td></tr>
<tr class="memdesc:aa7acdcce221b5a56a8ebb965c10c9d96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of characters in Desired String.  <a href="#aa7acdcce221b5a56a8ebb965c10c9d96">More...</a><br /></td></tr>
<tr class="separator:aa7acdcce221b5a56a8ebb965c10c9d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ad6bbbd9117e70c1ce9a39dd2836366c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* getdata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Input</td><td>- None. </td></tr>
    <tr><td class="paramname">Output</td><td>- Pointer to array storing desired sequence.</td></tr>
  </table>
  </dd>
</dl>
<p>Prototype - </p><div class="fragment"><div class="line"><span class="keywordtype">char</span>* <a class="code" href="parse_c_m_d_8c.html#ad6bbbd9117e70c1ce9a39dd2836366c4">getdata</a>();</div>
</div><!-- fragment --><p>Work -</p>
<p>Reads data from file named <em>data.txt</em> and stores desired sequence in dynamically allocated array. Example of file <em>data.txt</em> </p><pre class="fragment">5
hello</pre> 
<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00063">63</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    FILE *datafile;                             <span class="comment">// file handler</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">char</span> c;                                     <span class="comment">// incoming char</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;                             <span class="comment">// looping variable </span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">char</span> *<a class="code" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a>;                                 <span class="comment">// desired string container</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    datafile = fopen(<span class="stringliteral">&quot;data.txt&quot;</span>, <span class="stringliteral">&quot;r+&quot;</span>);         <span class="comment">// open data file, containing desired string</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> (datafile == NULL)                       <span class="comment">// error in opeining file</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        printf(<span class="stringliteral">&quot;No data file\n&quot;</span>);               <span class="comment">// print error</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> 0;                               <span class="comment">// exit</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a> = fgetc(datafile) - (int)<span class="charliteral">&#39;0&#39;</span>;  <span class="comment">// get length of desired string</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    data = malloc(<a class="code" href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a>*<span class="keyword">sizeof</span>(<span class="keywordtype">char</span>));   <span class="comment">// allocate memory</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    c = fgetc(datafile);                        <span class="comment">// get newline after length in datat.txt</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">for</span>(i=0;i&lt;<a class="code" href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a>;i++)                 <span class="comment">// get all characters in desired string</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        c = fgetc(datafile);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span>(c == EOF)                            <span class="comment">// file end condition</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">break</span>;                              <span class="comment">// break loop, protection for wrong data file</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            data[i] = c;                        <span class="comment">//copy data</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="ttc" id="parse_c_m_d_8c_html_ab5dd39b3c6371b911a65f9b97dc61453"><div class="ttname"><a href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a></div><div class="ttdeci">char * data</div><div class="ttdoc">Globally scoped array containing desired string sequence. </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00007">parseCMD.c:7</a></div></div>
<div class="ttc" id="parse_c_m_d_8c_html_aa7acdcce221b5a56a8ebb965c10c9d96"><div class="ttname"><a href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a></div><div class="ttdeci">int numberofchar</div><div class="ttdoc">Number of characters in Desired String. </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00011">parseCMD.c:11</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae66f6b31b5ad750f1fe042a706a4e3d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Input</td><td>- None. </td></tr>
    <tr><td class="paramname">Output</td><td>- int to operating system.</td></tr>
  </table>
  </dd>
</dl>
<p>Prototype - </p><div class="fragment"><div class="line"><span class="keywordtype">int</span> <a class="code" href="parse_c_m_d_8c.html#ae66f6b31b5ad750f1fe042a706a4e3d4">main</a>();</div>
</div><!-- fragment --><p><b>if</b> sequence is found prints <em>Found!!!</em>, <b>else</b> run indefinitely.</p>
<p>The input stream of characters is taken from <b>Command Prompt</b>. </p><dl class="section note"><dt>Note</dt><dd>This is point where program execution starts. </dd></dl>

<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00107">107</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">char</span> c;                                     <span class="comment">// incoming character</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">bool</span> helloFound = <span class="keyword">false</span>;                    <span class="comment">// success flag                 </span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a> = <a class="code" href="parse_c_m_d_8c.html#ad6bbbd9117e70c1ce9a39dd2836366c4">getdata</a>();                           <span class="comment">// get desired string</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">for</span>(;;)                                     <span class="comment">// search infinitely</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {   </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        scanf(<span class="stringliteral">&quot;%c&quot;</span>,&amp;c);                         <span class="comment">// get new character</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span>(c != 10)                             <span class="comment">// waste newline</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            helloFound = <a class="code" href="parse_c_m_d_8c.html#a4e4afb3c8c2df19d88370f1c49ced666">parseForHello</a>(c);      <span class="comment">// call SM function</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">if</span>(helloFound)                          <span class="comment">// success check</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">if</span>(helloFound)                              <span class="comment">// success print</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        printf(<span class="stringliteral">&quot;Found!!!\n&quot;</span>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
<div class="ttc" id="parse_c_m_d_8c_html_ab5dd39b3c6371b911a65f9b97dc61453"><div class="ttname"><a href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a></div><div class="ttdeci">char * data</div><div class="ttdoc">Globally scoped array containing desired string sequence. </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00007">parseCMD.c:7</a></div></div>
<div class="ttc" id="parse_c_m_d_8c_html_ad6bbbd9117e70c1ce9a39dd2836366c4"><div class="ttname"><a href="parse_c_m_d_8c.html#ad6bbbd9117e70c1ce9a39dd2836366c4">getdata</a></div><div class="ttdeci">char * getdata()</div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00063">parseCMD.c:63</a></div></div>
<div class="ttc" id="parse_c_m_d_8c_html_a4e4afb3c8c2df19d88370f1c49ced666"><div class="ttname"><a href="parse_c_m_d_8c.html#a4e4afb3c8c2df19d88370f1c49ced666">parseForHello</a></div><div class="ttdeci">bool parseForHello(char c)</div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00033">parseCMD.c:33</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e4afb3c8c2df19d88370f1c49ced666"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool parseForHello </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Input</td><td>- Incoming character. </td></tr>
    <tr><td class="paramname">Output</td><td>- Boolean, <b>true</b> if state machine reaches end state, <b>false</b> elsewhere.</td></tr>
  </table>
  </dd>
</dl>
<p>Prototype - </p><div class="fragment"><div class="line"><span class="keywordtype">bool</span> <a class="code" href="parse_c_m_d_8c.html#a4e4afb3c8c2df19d88370f1c49ced666">parseForHello</a>(<span class="keywordtype">char</span>);</div>
</div><!-- fragment --><p>Algorithm -</p>
<p>Algorithm mainly depends on three cases. </p><ol>
<li>
<b>if</b> incoming character is head character of desired sequence, <b>then</b> reset state of State Machine (SM) </li>
<li>
<b>if</b> incoming character is next desired character, <b>then</b> increament state. </li>
<li>
<b>if</b> incoming character is other than above conditions, <b>then</b> reset state to -1. </li>
</ol>
<dl class="section note"><dt>Note</dt><dd>We assume desired sequence is given in array data which is globally scoped. </dd></dl>

<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00033">33</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">if</span>(c == <a class="code" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a>[0])                            <span class="comment">// if 1st state is encountered</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a> = 0;                              <span class="comment">// reset state to 1st state</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(c == <a class="code" href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a>[<a class="code" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a>+1])                 <span class="comment">// input is equal to next state</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <a class="code" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a>++;                                <span class="comment">// increament state</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <a class="code" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a> = -1;                             <span class="comment">// unknown character found reset state</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a> == <a class="code" href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a>-1)                 <span class="comment">// reached end of SM</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;                            <span class="comment">// return success</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;                               <span class="comment">// return failure</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="ttc" id="parse_c_m_d_8c_html_ab5dd39b3c6371b911a65f9b97dc61453"><div class="ttname"><a href="parse_c_m_d_8c.html#ab5dd39b3c6371b911a65f9b97dc61453">data</a></div><div class="ttdeci">char * data</div><div class="ttdoc">Globally scoped array containing desired string sequence. </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00007">parseCMD.c:7</a></div></div>
<div class="ttc" id="parse_c_m_d_8c_html_aa7acdcce221b5a56a8ebb965c10c9d96"><div class="ttname"><a href="parse_c_m_d_8c.html#aa7acdcce221b5a56a8ebb965c10c9d96">numberofchar</a></div><div class="ttdeci">int numberofchar</div><div class="ttdoc">Number of characters in Desired String. </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00011">parseCMD.c:11</a></div></div>
<div class="ttc" id="parse_c_m_d_8c_html_a89f234133d3efe315836311cbf21c64b"><div class="ttname"><a href="parse_c_m_d_8c.html#a89f234133d3efe315836311cbf21c64b">state</a></div><div class="ttdeci">int state</div><div class="ttdoc">State of system, starts from -1 to (number of elements - 1) </div><div class="ttdef"><b>Definition:</b> <a href="parse_c_m_d_8c_source.html#l00009">parseCMD.c:9</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="ab5dd39b3c6371b911a65f9b97dc61453"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Globally scoped array containing desired string sequence. </p>

<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00007">7</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>

</div>
</div>
<a class="anchor" id="aa7acdcce221b5a56a8ebb965c10c9d96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int numberofchar</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of characters in Desired String. </p>

<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00011">11</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>

</div>
</div>
<a class="anchor" id="a89f234133d3efe315836311cbf21c64b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int state = -1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>State of system, starts from -1 to (number of elements - 1) </p>

<p>Definition at line <a class="el" href="parse_c_m_d_8c_source.html#l00009">9</a> of file <a class="el" href="parse_c_m_d_8c_source.html">parseCMD.c</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="parse_c_m_d_8c.html">parseCMD.c</a></li>
    <li class="footer">Generated on Tue Dec 8 2015 20:25:54 for Pattern parsing by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.7 </li>
  </ul>
</div>
</body>
</html>
